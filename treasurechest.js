const gameDataa = {
    "Stardew Valley": {
        img: "https://images.pushsquare.com/f6b5a9a5050bd/stardew-valley-1-5-ps4.original.jpg",
        link: "https://store.steampowered.com/app/413150/Stardew_Valley/",
        desc: "‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ä‡∏µ‡∏ß‡∏¥‡∏ï‡πÉ‡∏´‡∏°‡πà‡πÉ‡∏ô‡∏ü‡∏≤‡∏£‡πå‡∏°‡∏Ç‡∏≠‡∏á‡∏Ñ‡∏∏‡∏ì‡πÄ‡∏≠‡∏á‡πÉ‡∏ô‡∏´‡∏∏‡∏ö‡πÄ‡∏Ç‡∏≤‡∏™‡∏á‡∏ö‡πÅ‡∏´‡πà‡∏á‡∏ô‡∏µ‡πâ",
        genre: "Simulation, RPG",
        platforms: ["PC", "Mac", "Switch"]
    },
    "Fez": {
        img: "https://cdn.akamai.steamstatic.com/steam/apps/224760/header.jpg",
        link: "https://store.steampowered.com/app/224760/Fez/",
        desc: "‡∏™‡∏•‡∏±‡∏ö‡∏°‡∏∏‡∏°‡∏°‡∏≠‡∏á 2D/3D ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÑ‡∏Ç‡∏õ‡∏£‡∏¥‡∏®‡∏ô‡∏≤‡πÇ‡∏•‡∏Å‡∏™‡∏∏‡∏î‡∏õ‡∏£‡∏∞‡∏´‡∏•‡∏≤‡∏î",
        genre: "‡πÅ‡∏û‡∏•‡∏ï‡∏ü‡∏≠‡∏£‡πå‡∏°, ‡∏õ‡∏£‡∏¥‡∏®‡∏ô‡∏≤",
        platforms: ["PC", "PS4"]
    },
    "Eastward": {
        img: "https://cdn.akamai.steamstatic.com/steam/apps/977880/header.jpg",
        link: "https://store.steampowered.com/app/977880/Eastward/",
        desc: "‡∏ú‡∏à‡∏ç‡∏†‡∏±‡∏¢‡πÉ‡∏ô‡πÇ‡∏•‡∏Å‡∏™‡πÑ‡∏ï‡∏•‡πå‡∏û‡∏¥‡∏Å‡πÄ‡∏ã‡∏•‡∏Å‡∏±‡∏ö‡πÄ‡∏£‡∏∑‡πà‡∏≠‡∏á‡∏£‡∏≤‡∏ß‡∏•‡∏∂‡∏Å‡∏•‡∏±‡∏ö",
        genre: "‡∏ú‡∏à‡∏ç‡∏†‡∏±‡∏¢, RPG",
        platforms: ["PC", "Switch"]
    },
    "Katana ZERO": {
        img: "https://cdn.akamai.steamstatic.com/steam/apps/460950/header.jpg",
        link: "https://store.steampowered.com/app/460950/Katana_ZERO/",
        desc: "‡∏ô‡∏±‡∏Å‡∏Ü‡πà‡∏≤‡∏ô‡∏µ‡πÇ‡∏≠‡∏ô‡∏±‡∏ß‡∏£‡πå‡∏ó‡∏µ‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏Ñ‡∏ß‡∏ö‡∏Ñ‡∏∏‡∏°‡πÄ‡∏ß‡∏•‡∏≤‡πÑ‡∏î‡πâ",
        genre: "‡πÅ‡∏≠‡πá‡∏Å‡∏ä‡∏±‡∏ô, ‡∏ô‡∏µ‡πÇ‡∏≠‡∏ô‡∏±‡∏ß‡∏£‡πå",
        platforms: ["PC", "Switch"]
    },
    "Owlboy": {
        img: "https://cdn.akamai.steamstatic.com/steam/apps/115800/header.jpg",
        link: "https://store.steampowered.com/app/115800/Owlboy/",
        desc: "‡∏ö‡∏¥‡∏ô‡πÑ‡∏õ‡πÉ‡∏ô‡πÇ‡∏•‡∏Å‡∏™‡∏∏‡∏î‡∏á‡∏î‡∏á‡∏≤‡∏°‡∏Å‡∏±‡∏ö Otus ‡∏ô‡∏Å‡∏Æ‡∏π‡∏Å‡∏ô‡∏±‡∏Å‡∏ú‡∏à‡∏ç‡∏†‡∏±‡∏¢",
        genre: "‡∏ú‡∏à‡∏ç‡∏†‡∏±‡∏¢, ‡πÅ‡∏û‡∏•‡∏ï‡∏ü‡∏≠‡∏£‡πå‡∏°",
        platforms: ["PC", "Switch"]
    },
    "Shovel Knight": {
        img: "https://cdn.akamai.steamstatic.com/steam/apps/250760/header.jpg",
        link: "https://store.steampowered.com/app/250760/Shovel_Knight/",
        desc: "‡∏ô‡∏±‡∏Å‡∏Ç‡∏∏‡∏î‡∏ú‡∏π‡πâ‡∏Å‡∏•‡πâ‡∏≤‡∏ó‡∏µ‡πà‡∏ï‡πâ‡∏≠‡∏á‡∏õ‡∏Å‡∏õ‡πâ‡∏≠‡∏á‡πÇ‡∏•‡∏Å‡πÉ‡∏ô‡∏™‡πÑ‡∏ï‡∏•‡πå 8-bit",
        genre: "‡πÅ‡∏≠‡πá‡∏Å‡∏ä‡∏±‡∏ô, ‡∏ú‡∏à‡∏ç‡∏†‡∏±‡∏¢, ‡πÅ‡∏û‡∏•‡∏ï‡∏ü‡∏≠‡∏£‡πå‡∏°",
        platforms: ["PC", "Switch", "PS4"]
    },
    "Super Meat Boy": {
        img: "https://cdn.akamai.steamstatic.com/steam/apps/40800/header.jpg",
        link: "https://store.steampowered.com/app/40800/Super_Meat_Boy/",
        desc: "‡πÅ‡∏û‡∏•‡∏ï‡∏ü‡∏≠‡∏£‡πå‡∏°‡∏£‡∏∞‡∏î‡∏±‡∏ö‡∏Æ‡∏≤‡∏£‡πå‡∏î‡∏Ñ‡∏≠‡∏£‡πå ‡∏Å‡∏π‡πâ‡πÅ‡∏ü‡∏ô‡∏™‡∏≤‡∏ß‡∏à‡∏≤‡∏Å‡∏î‡πà‡∏≤‡∏ô‡∏™‡∏∏‡∏î‡πÇ‡∏´‡∏î",
        genre: "‡πÅ‡∏û‡∏•‡∏ï‡∏ü‡∏≠‡∏£‡πå‡∏°, ‡πÅ‡∏≠‡πá‡∏Å‡∏ä‡∏±‡∏ô",
        platforms: ["PC", "Switch"]
    },
    "Hotline Miami": {
        img: "https://cdn.akamai.steamstatic.com/steam/apps/219150/header.jpg",
        link: "https://store.steampowered.com/app/219150/Hotline_Miami/",
        desc: "‡πÅ‡∏≠‡πá‡∏Å‡∏ä‡∏±‡∏ô‡πÄ‡∏•‡∏∑‡∏≠‡∏î‡∏™‡∏≤‡∏î ‡πÄ‡∏£‡πá‡∏ß ‡∏î‡∏∏‡πÄ‡∏î‡∏∑‡∏≠‡∏î ‡πÉ‡∏ô‡πÇ‡∏•‡∏Å‡∏ô‡∏µ‡πÇ‡∏≠‡∏ô‡∏±‡∏ß‡∏£‡πå",
        genre: "‡πÅ‡∏≠‡πá‡∏Å‡∏ä‡∏±‡∏ô, ‡∏ô‡∏µ‡πÇ‡∏≠‡∏ô‡∏±‡∏ß‡∏£‡πå",
        platforms: ["PC", "Switch"]
    },
    "Dead Cells": {
        img: "https://cdn.akamai.steamstatic.com/steam/apps/588650/header.jpg",
        link: "https://store.steampowered.com/app/588650/Dead_Cells/",
        desc: "‡πÅ‡∏≠‡πá‡∏Å‡∏ä‡∏±‡∏ô Roguelike ‡πÅ‡∏•‡∏∞ Metroidvania ‡∏£‡∏ß‡∏°‡∏Å‡∏±‡∏ô!",
        genre: "‡πÅ‡∏≠‡πá‡∏Å‡∏ä‡∏±‡∏ô, Roguelike, Metroidvania",
        platforms: ["PC", "Switch", "PS4"]
    },
    "Octopath Traveler": {
        img: "https://th.bing.com/th/id/OIP.EPoxAtSmUsJD55S_0-B9NgHaEP?w=616&h=353&rs=1&pid=ImgDetMain",
        link: "https://store.steampowered.com/app/921570/OCTOPATH_TRAVELER/",
        desc: "RPG 8 ‡∏ï‡∏±‡∏ß‡∏•‡∏∞‡∏Ñ‡∏£ 8 ‡πÄ‡∏£‡∏∑‡πà‡∏≠‡∏á‡∏£‡∏≤‡∏ß ‡πÅ‡∏ü‡∏ô‡∏ï‡∏≤‡∏ã‡∏µ‡∏™‡∏∏‡∏î‡∏™‡∏ß‡∏¢",
        genre: "RPG",
        platforms: ["PC", "Switch"]
    },
    "The Messenger": {
        img: "https://cdn.akamai.steamstatic.com/steam/apps/764790/header.jpg",
        link: "https://store.steampowered.com/app/764790/The_Messenger/",
        desc: "‡∏ô‡∏¥‡∏ô‡∏à‡∏≤‡∏û‡∏¥‡∏Å‡πÄ‡∏ã‡∏•‡∏ú‡∏π‡πâ‡∏Å‡∏≠‡∏ö‡∏Å‡∏π‡πâ‡∏≠‡∏ô‡∏≤‡∏Ñ‡∏ï!",
        genre: "‡πÅ‡∏≠‡πá‡∏Å‡∏ä‡∏±‡∏ô, ‡∏ú‡∏à‡∏ç‡∏†‡∏±‡∏¢, ‡πÅ‡∏û‡∏•‡∏ï‡∏ü‡∏≠‡∏£‡πå‡∏°",
        platforms: ["PC", "Switch"]
    },
    "Celeste": {
        img: "https://cdn.akamai.steamstatic.com/steam/apps/504230/header.jpg",
        link: "https://store.steampowered.com/app/504230/Celeste/",
        desc: "‡πÅ‡∏û‡∏•‡∏ï‡∏ü‡∏≠‡∏£‡πå‡∏°‡∏™‡∏∏‡∏î‡πÄ‡∏Ç‡πâ‡∏°‡∏Ç‡πâ‡∏ô‡∏Å‡∏±‡∏ö‡∏Å‡∏≤‡∏£‡∏õ‡∏µ‡∏ô‡πÄ‡∏Ç‡∏≤‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏Ñ‡πâ‡∏ô‡∏´‡∏≤‡∏ï‡∏±‡∏ß‡∏ï‡∏ô",
        genre: "‡πÅ‡∏û‡∏•‡∏ï‡∏ü‡∏≠‡∏£‡πå‡∏°, ‡∏ú‡∏à‡∏ç‡∏†‡∏±‡∏¢",
        platforms: ["PC", "Switch", "PS4"]
    }
    
};

//Favorites
const container = document.getElementById("treasurechest");
const favorites = JSON.parse(localStorage.getItem("favorites") || "[]");

if (favorites.length === 0) {
    container.innerHTML = "<p>Your treasure chest is empty</p>";
} else {
    favorites.forEach(game => {
        const data = gameDataa[game]; 
        if (!data) return; //skipnextgame

        const card = document.createElement("div");
        card.className = "game-card";
        card.innerHTML = `
            <a href="${data.link}" target="_blank">
                <img src="${data.img}" alt="${game}">
            </a>
            <h3>${game}</h3>
            <p>${data.desc}</p>
            <p><strong>‡πÅ‡∏ô‡∏ß‡πÄ‡∏Å‡∏°:</strong> ${data.genre}</p>
            <div>${data.platforms.map(p => `<span class="tag">${p}</span>`).join('')}</div>
            <div class="card-actions">
                <button onclick="removeFromFavorites('${game}')">üóëÔ∏è ‡∏•‡∏ö</button>
            </div>
        `;
        container.appendChild(card); //addcard
    });
}

//remove
function removeFromFavorites(gameName) {
    const updatedFavorites = favorites.filter(g => g !== gameName); //cheackgame
    localStorage.setItem("favorites", JSON.stringify(updatedFavorites));
    location.reload(); 
}
//recommendations
function getRecommendedGames() {
    const recommendations = [];
    const added = new Set(favorites); //savegame

   
    const likedGenres = new Set();
    favorites.forEach(game => {
        const gameInfo = gameDataa[game]; //gameDataa from fav
        if (gameInfo && gameInfo.genre) {
            gameInfo.genre.split(',').map(g => g.trim()).forEach(g => likedGenres.add(g));
        }
    });

    Object.entries(gameDataa).forEach(([name, data]) => {
        if (added.has(name)) return; //if have skip

        const gameGenres = data.genre.split(',').map(g => g.trim());
        const hasCommonGenre = gameGenres.some(genre => likedGenres.has(genre)); //cheack

        if (hasCommonGenre) {
            recommendations.push({ name, data });
        }
    });

    return recommendations;
}
//renderRecommendations
function renderRecommendations() {
    const recContainer = document.getElementById("recommendations");
    const recommended = getRecommendedGames();

    if (recommended.length === 0) {
        recContainer.innerHTML = "<p style='text-align:center;'>No recommendations yet. Like more games to see suggestions</p>";
        return;
    }

    recommended.forEach(({ name, data }) => {
        const card = document.createElement("div");
        card.className = "game-card"; //css
        card.innerHTML = `
            <a href="${data.link}" target="_blank">
                <img src="${data.img}" alt="${name}">
            </a>
            <h3>${name}</h3>
            <p>${data.desc}</p>
            <p><strong>‡πÅ‡∏ô‡∏ß‡πÄ‡∏Å‡∏°:</strong> ${data.genre}</p>
            <div>${data.platforms.map(p => `<span class="tag">${p}</span>`).join('')}</div>
        `;
        recContainer.appendChild(card); //addcard
    });
}
renderRecommendations();
